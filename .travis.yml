# Run android emulator on accelerated intel CPU
# Includes test.
language: generic
dist: bionic

# specify global envs and jobs
env:
  global:
    - ANDROID_TOOLS=4333796 # android-28
    - ANDROID_HOME=${HOME}/android-sdk
    - GRAVIS="https://raw.githubusercontent.com/DanySK/Gravis-CI/master/"
    - JDK="1.8" # the JDK used for running tests
    - TOOLS=${ANDROID_HOME}/tools
    # PATH order is incredibly important. e.g. the 'emulator' script exists in more than one place!
    - PATH=${ANDROID_HOME}:${ANDROID_HOME}/emulator:${TOOLS}:${TOOLS}/bin:${ANDROID_HOME}/platform-tools:${PATH}
    - FLUTTER_CHANNEL=stable
    - FLUTTER_VERSION=1.9.1+hotfix.6-${FLUTTER_CHANNEL}
    - FLUTTER_HOME=${HOME}/flutter
    - PATH=${HOME}/.pub-cache/bin:${PATH}
    - PATH=${FLUTTER_HOME}/bin:${FLUTTER_HOME}/bin/cache/dart-sdk/bin:${PATH}
    - API=28
    - ABI=x86
    - GOO=default

before_install:
  - java -version

  # Set up KVM
  - sudo apt-get -y --no-install-recommends install bridge-utils libpulse0 libvirt-bin qemu-kvm virtinst ubuntu-vm-builder > /dev/null
  # add travis user to groups
  - sudo adduser $USER libvirt
  - sudo adduser $USER kvm

  # Set up JDK 8 for Android SDK
  - curl "${GRAVIS}.install-jdk-travis.sh" --output ~/.install-jdk-travis.sh
  - export TARGET_JDK="${JDK}"
  - JDK="1.8" # used when running sdkmanager
  - source ~/.install-jdk-travis.sh
  - wget -q "https://dl.google.com/android/repository/sdk-tools-linux-$ANDROID_TOOLS.zip" -O android-sdk-tools.zip
  - unzip -q android-sdk-tools.zip -d ${ANDROID_HOME}
  - rm android-sdk-tools.zip

  # Avoid harmless sdkmanager warning
  - mkdir ~/.android
  - echo 'count=0' > ~/.android/repositories.cfg

  # Accept licenses before installing components, no need to echo y for each component
  - yes | sdkmanager --licenses >/dev/null

install:
  # Download SDK tools
  - sdkmanager "platform-tools" >/dev/null
  - sdkmanager "tools" >/dev/null # A second time per Travis docs, gets latest versions
  - sdkmanager "build-tools;28.0.3" >/dev/null # Implicit gradle dependency - gradle drives changes
  - sdkmanager "platforms;android-$API" >/dev/null # We need the API of the emulator we will run
  - sdkmanager "platforms;android-28" >/dev/null # We need the API of the current compileSdkVersion from gradle.properties  -

  - sdkmanager "emulator" >/dev/null
  - ${ANDROID_HOME}/emulator/emulator -version

  - sdkmanager "extras;android;m2repository" >/dev/null
  - sdkmanager "system-images;android-$API;$GOO;$ABI" >/dev/null # install system images for emulator

  # Create an Android emulator
#  - echo no | avdmanager --verbose create avd --force -n test -k "system-images;android-$API;$GOO;$ABI" -c 10M
  - echo no | avdmanager --verbose create avd --force -n test -k "system-images;android-$API;$GOO;$ABI"
#  - EMU_PARAMS="
#      -verbose
#      -no-snapshot
#      -no-window
#      -no-audio
#      -no-boot-anim
#      -camera-back none
#      -camera-front none
#      -selinux permissive
#      -qemu -m 2048"
  - EMU_PARAMS="
    -avd test
    -no-window
    -no-audio
    "
  - EMU_COMMAND="emulator"
  - |
    if [[ $ABI =~ "x86" ]]; then
      EMU_COMMAND="emulator-headless"
    else
      # emulate graphics if running on ARM
      EMU_PARAMS="${EMU_PARAMS} -gpu swiftshader"
    fi
  # This double "sudo" monstrosity is used to have Travis execute the
  # emulator with its new group permissions and help preserve the rule
  # of least privilege.
  - sudo -E sudo -u $USER -E bash -c "${ANDROID_HOME}/emulator/${EMU_COMMAND} ${EMU_PARAMS} &"

  # install flutter (while emulator is starting)
  - wget --quiet --output-document=flutter.tar.xz https://storage.googleapis.com/flutter_infra/releases/${FLUTTER_CHANNEL}/linux/flutter_linux_v${FLUTTER_VERSION}.tar.xz
  - tar xf flutter.tar.xz -C $(dirname ${FLUTTER_HOME})
  - rm flutter.tar.xz

  # Switch back to our target JDK version to build and run tests
  - JDK="${TARGET_JDK}"
  - source ~/.install-jdk-travis.sh

  - flutter doctor -v

before_script:
  # wait for emulator to finish startup
  - ./script/android-wait-for-emulator.sh
  # unlock screen
  - adb shell input keyevent 82 &

script:
  # run test with retries
  - flutter driver test_driver/main.dart

#before_cache:
#  - rm -f $HOME/.gradle/caches/modules-2/modules-2.lock
#  - curl "${GRAVIS}.clean_gradle_cache.sh" --output ~/.clean_gradle_cache.sh
#  - bash ~/.clean_gradle_cache.sh
#
cache:
  directories:
    - $HOME/.pub-cache
#    - $HOME/.gradle/caches/
#    - $HOME/.gradle/wrapper/
